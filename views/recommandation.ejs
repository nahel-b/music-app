
          <html lang="fr">
          <head>
            <meta charset="UTF-8"> 
            <meta http-equiv="X-UA-Compatible" content="IE=edge">
            <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
            <link rel="preconnect" href="https://fonts.googleapis.com"> 
            <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin> 
            <link href="https://fonts.googleapis.com/css2?family=Bebas+Neue&display=swap" rel="stylesheet">
            <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
            
            <script src="https://cdn.jsdelivr.net/npm/colorthief@2.3.0/dist/color-thief.min.js"></script>

            <script src="https://hammerjs.github.io/dist/hammer.min.js"></script>

            
             <title>Recommandations</title>

           <style>

             

             *, *:before, *:after {
                             box-sizing: border-box;
                             padding: 0;
                             margin: 0;
                           }

             /*----AUDIO----*/
             .audio-player {
                 position: fixed;
                 bottom: 0;
                 left: 0;
                 width: 100%;
                 background-color: transparent;
                 color: white;
                 text-align: center;
                 padding: 10px;
             }

             #playPauseBtn {
                 background-color: transparent;
                 border: none;
                 font-size: 24px;
                 cursor: pointer;
                 color: #ddd;
             }

             #playPauseBtn:hover {
                 color: #ddd;
             }

             #timeline-container {
                 width: 80%;
                 margin: 0 10%;
                 position: relative;
             }

             #timeline {
                 width: 100%;
                 height: 8px;
                 margin-top: 10px;
                 cursor: pointer;
                 position: relative;
                 overflow: hidden;
             }

             #progress-bar {
                 height: 100%;
                 width: 0;
                 background-color: #ddd;
                 border-radius: 4px; /* Bord arrondis */
                 position: absolute;
             }

             /*----AUDIO----*/


              *, *:before, *:after {
                              box-sizing: border-box;
                              padding: 0;
                              margin: 0;
                            }

                            body {
                              background: #CCFBFE;
                              overflow: hidden;
                              font-family: sans-serif;
                              touch-action: manipulation;
                            }
                            .tinder--title {
                             text-align : center;

                            font-family: 'Bebas Neue', sans-serif;
                            font-size : 45px;

                            }

                            .tinder {
                              width: 100vw;
                              height: 100vh;
                              overflow: hidden;
                              display: flex;
                              flex-direction: column;
                              position: relative;
                              opacity: 0;
                              transition: opacity 0.1s ease-in-out;
                            }

                            .loaded.tinder {
                              opacity: 1;
                            }

                            .tinder--status {
                              position: absolute;
                              top: 50%;
                              margin-top: -30px;
                              z-index: 2;
                              width: 100%;
                              text-align: center;
                              pointer-events: none;
                            }

                            .tinder--status i {
                              font-size: 100px;
                              opacity: 0;
                              transform: scale(0.3);
                              transition: all 0.2s ease-in-out;
                              position: absolute;
                              width: 100px;
                              margin-left: -50px;
                            }

                            .tinder_love .fa-heart {
                              opacity: 0.7;
                              transform: scale(1);
                            }

                            .tinder_nope .fa-remove {
                              opacity: 0.7;
                              transform: scale(1);
                            }


                            .tinder--cards {
                              flex-grow: 1;
                              margin-top: -100px;
                              text-align: center;
                              display: flex;
                              justify-content: center;
                              align-items: center; /* Center vertically */
                              height: 70vh; /* Set the desired height */
                              overflow: hidden;
                              z-index: 1;
                              position: relative;
                            }

                            .tinder--card {
                              display: inline-block;
                              width: 250px; /* Set the desired width */
                              height: 250px; /* Set the desired height */
                               /*background: #FFFFFF;*/
                              padding-bottom: 0px;
                              border-radius: 8px; 
                              overflow: hidden;
                              position: absolute;
                              will-change: transform;
                              transition: all 0.3s ease-in-out;
                              cursor: -webkit-grab;
                              cursor: -moz-grab;
                              cursor: grab;
                            }

                            .moving.tinder--card {
                              transition: none;
                              cursor: -webkit-grabbing;
                              cursor: -moz-grabbing;
                              cursor: grabbing;
                            }

                            .tinder--card img {
                              max-width: 100%;
                              pointer-events: none;
                            }

                            .tinder--card h3 {
                              margin-top: 32px;
                              font-size: 32px;
                              padding: 0 16px;
                              pointer-events: none;
                            }

                            .tinder--card p {
                              margin-top: 24px;
                              font-size: 20px;
                              padding: 0 16px;
                              pointer-events: none;
                            }

                            .tinder--buttons {
                              text-align: center;
                              padding-top: 350px;
                             position: absolute;
                            }
                             .texte--musique {

                              flex-grow: 1;
                              margin-top: -420px;
                              text-align: center;

                            }
                            .texte--musique .titre {

                                  font-size: 40px;

                                 width : 100%;
                                  color : #675f63;
                                  font-family : "Bebas Neue", sans-serif;
                                  font-weight: bolder;
                         text-shadow: 0px 0px  2px #675f63;

                                 left: 50%;
                                 transform: translateX(-50%);
                                 position : absolute;
                                 width : 100%;

                             }
                             .texte--musique .artiste
                             {
                                 left: 50%;
                                  width : 100%;
                                 transform: translateX(-50%);
                                 position : absolute;

                                 margin-top: 40px;
                                  font-size: 18px;
                                  margin-left : 0px;
                                  font-family : "Bebas Neue";
                                  margin-bottom: 0px;
                                  color : #bcaeb3;
                                  font-weight: lighter;
                                  /*text-shadow: 0px 0px  4px rgba(0,0,0,0.1)*/
                                }
                            .tinder--buttons button {
                              border-radius: 50%;
                              line-height: 60px;
                              width: 60px;
                              height: 60px;
                              border: 0;
                              background: #FFFFFF;
                              display: inline-block;
                              margin: 0 8px;
                            }

                            .tinder--buttons button:focus {
                              outline: 0;
                            }

                            .tinder--buttons i {
                              font-size: 32px;
                              vertical-align: middle;
                            }

                            .fa-heart {
                              color: #FFACE4;
                            }
                           .fa-undo
                            {
                              color : #B2E8FD
                            }
                            .fa-remove {
                              color: #CDD6DD;
                            }


                    .card-text {
                      position: absolute;
                      bottom: 00px;
                      left: 10px;

                      padding: 0px;
                      color: #fff; /* Text color, adjust as needed */
                      text-align: left; /* Align text to the left */
                      font-family: 'Bebas Neue', sans-serif;
                    }

                    .card-text h3 {
                      padding-left : 0px;
                      font-size: 40px;
                      margin-bottom: -5px;

                      /*text-shadow: 0px 0px  7px rgba(0,0,0,0.1)*/
                    }

                    .card-text h4 {
                      font-size: 15px;
                      color: #DCDCDC; /* Subtitle color, adjust as needed */
                      margin-bottom: 8px;
                      /*text-shadow: 0px 0px  4px rgba(0,0,0,0.1)*/
                    }
              h3.black-text {
                     color: black !important; 
                   }
              h4.black-text {
                color: #3D3D3D !important; 
              }



             
           </style>
          </head>
          <body>




            
            <div class="tinder">
              <div class="tinder--status">
                <i class="fa fa-remove"></i>
                <i class="fa fa-heart"></i>
              </div>
              <h1 class="tinder--title">🎧À l'écoute :🎧</h1>


              <div class="tinder--cards">

                <div class ="texte--musique">
                  <div class="titre">
                      Chargement chef...
                  </div>
                  <div class="artiste">
                      
                  </div>
                  </div>
                 
                  
               

              <div class="tinder--buttons">
                <button id="nope"><i class="fa fa-remove"></i></button>
                <button id="undo"><i class="fa fa-undo" aria-hidden="true"></i></button>
                <button id="love"><i class="fa fa-heart"></i></button>
                <div class="audio-player">
                    <audio loop id="myAudio" src=""></audio>
                    <button id="playPauseBtn" onclick="togglePlayPause()">
                        <i class="fa fa-play"></i>
                    </button>
                    <div id="timeline-container">
                        <div id="timeline" onmousedown="startSeek(event)" ontouchstart="startSeek(event)">
                            <div id="progress-bar"></div>
                        </div>
                    </div>
                </div>
              </div>
                 </div>


              
              
              </div>
            

<script>

              'use strict';
              var liste_son_seed_reco = "<%= liste_son_seed_reco %>"
              var playlist_id = "<%= playlist_id %>"
              var INDEX_CARDS = 0 // carte affichée à l'écran
              var offset_cards = 0 // de ou on par pour les requete 
              var liste_son_reco = [] // son de musique reco
              var chargement_liste_son_reco = false
              var nb_ajout_son = 20
  
              var tinderContainer = document.querySelector('.tinder');
              var allCards = document.querySelectorAll('.tinder--card');
              var nope = document.getElementById('nope');
              var love = document.getElementById('love');
              var undo = document.getElementById('undo');
              var newCards = document.querySelectorAll('.tinder--card');

              
              

              async function refresh() 
              {
                if( INDEX_CARDS > liste_son_reco.length - nb_ajout_son/2 && !chargement_liste_son_reco)
                {
                  console.log("chargement nouveaux sons...")
                  chargement_liste_son_reco = true
                  fetch(`<%= SERVER_URL %>/api/recommandation?liste_son_seed_reco=${liste_son_seed_reco}&offset=${offset_cards}&limit=${nb_ajout_son}`)
                  .then(response => response.json())
                  .then(data => {
                    
                    
                    if (data == 0 || data == -1) {
                      alert("Erreur de connexion à l'API (dis-le à Nahel) et relance la page");
                      chargement_liste_son_reco = false
                      return;
                    }
                    var offset_a_ajouter = liste_son_reco.length 
                    liste_son_reco.push(...data)
                    chargement_liste_son_reco = false
                    ajouterCarte(offset_a_ajouter)
                   
                    
                  })
                  .catch(error => {
                    console.error('Erreur lors de l\'appel à l\'API:', error);
                  })



                  
                }
                
              }
              function ajouterCarte(offset_depart) {
                // Sélectionner la div avec la classe "tinder--cards"
                var divTinderCards = document.querySelector('.tinder--cards');
            
                for (let index = offset_depart; index < liste_son_reco.length; index++) 
                {
                  
                    var nouvelleCarte = document.createElement('div');
                    nouvelleCarte.classList.add('tinder--card');
                    nouvelleCarte.style.display = 'none'
                    nouvelleCarte.id = 'card-' +  index;
                    var song = liste_son_reco[index]
                    nouvelleCarte.innerHTML = `
                      <img src="${song.image_urls[1]}">
                      
                    `;
                
                    // Ajouter la nouvelle carte à la div "tinder--cards"
                    divTinderCards.appendChild(nouvelleCarte);
                    
                  }
                initCards()
                addGlissement()
                
              }

  
              refresh()
  

              tinderContainer.classList.add('loaded');
  
              function initCards(card, index) {


                  changeAudioSource(liste_son_reco[INDEX_CARDS].preview_url)
                  var titre = liste_son_reco[INDEX_CARDS].titre
                  titre = titre.length > 20 ? titre.substring(0, 20) + '...' : titre
                  var artiste = liste_son_reco[INDEX_CARDS].artiste
                  artiste = artiste.length > 30 ? artiste.substring(0, 30) + '...' : artiste
                  document.querySelector(".texte--musique .titre").innerHTML = titre
                  document.querySelector(".texte--musique .artiste").innerHTML = artiste

                
                  allCards = document.querySelectorAll('.tinder--card');
                  var newCards = document.querySelectorAll('.tinder--card:not(.removed)');

                
                  newCards.forEach(function (card, index) {
      card.style.zIndex = allCards.length - index;
                  
                  if (index === 0) {
                    
                    card.style.transform = 'translateY(0px) scale(1)';
                    card.style.display = 'block'
                  } else 
                  {
                    
                    card.style.transform = 'scale(' + (20 - index) / 20 + ') translateY(-30px)';
                    if(index<5){card.style.display = 'block'}
                    //card.style.opacity = (10 - index) / 10;
                  }
                  
    });
  
                  tinderContainer.classList.add('loaded');
              }

              //initCards();

              function  addGlissement(){
              var notInitCards = document.querySelectorAll('.tinder--card:not(.init)');
                notInitCards.forEach(function (el) {
                el.classList.add('init');
                var hammertime = new Hammer(el);

                hammertime.on('pan', function (event) {
                  el.classList.add('moving');
                });

                hammertime.on('pan', function (event) {
                  if (event.deltaX === 0) return;
                  if (event.center.x === 0 && event.center.y === 0) return;

                  tinderContainer.classList.toggle('tinder_love', event.deltaX > 0);
                  tinderContainer.classList.toggle('tinder_nope', event.deltaX < 0);

                  var xMulti = event.deltaX * 0.03;
                  var yMulti = event.deltaY / 80;
                  var rotate = xMulti * yMulti;
                  var cards = document.querySelectorAll('.tinder--card:not(.removed)');

                  cards[0].style.transform = 'translate(' + event.deltaX + 'px, ' + event.deltaY + 'px) rotate(' + rotate + 'deg)';
                });

                hammertime.on('panend', function (event) {
                  el.classList.remove('moving');
                  
                  setTimeout(function() {
                    tinderContainer.classList.remove('tinder_love');
                    tinderContainer.classList.remove('tinder_nope'); 
                  }, 250);
                 

                  var moveOutWidth = document.body.clientWidth;
                  var keep = Math.abs(event.deltaX) < 80 || Math.abs(event.velocityX) < 0.5;

                  if(!keep)
                  {
                    INDEX_CARDS = INDEX_CARDS+1
                    console.log(event.deltaX > 0 ? 'like' : 'nope')
                    refresh()
                  }

                  var cards = document.querySelectorAll('.tinder--card:not(.removed)');
                  cards[0].classList.toggle('removed', !keep);

                  if (keep) {
                    cards[0].style.transform = '';
                  } else {
                    var endX = Math.max(Math.abs(event.velocityX) * moveOutWidth, moveOutWidth);
                    var toX = event.deltaX > 0 ? endX : -endX;
                    var endY = Math.abs(event.velocityY) * moveOutWidth;
                    var toY = event.deltaY > 0 ? endY : -endY;
                    var xMulti = event.deltaX * 0.03;
                    var yMulti = event.deltaY / 80;
                    var rotate = xMulti * yMulti;



                  cards[0].style.transform = 'translate(' + toX + 'px, ' + (toY + event.deltaY) + 'px) rotate(' + rotate + 'deg)'; 


                      initCards();



                  }
                });
              });
  }
              function createButtonListener(love) {
                return function (event) {
                  INDEX_CARDS = INDEX_CARDS + 1
                  var cards = document.querySelectorAll('.tinder--card:not(.removed)');
                  var moveOutWidth = document.body.clientWidth * 1.5;

                  if (!cards.length) return false;

                  var card = cards[0];

                  card.classList.add('removed');

                  if (love) {
                    card.style.transform = 'translate(' + moveOutWidth + 'px, -100px) rotate(-30deg)';
                  } else {
                    card.style.transform = 'translate(-' + moveOutWidth + 'px, -100px) rotate(30deg)';
                  }

                  initCards();

                  event.preventDefault();
                };
              }
              function undo_funct() {
              if (INDEX_CARDS<=0){return}
              INDEX_CARDS = INDEX_CARDS-1
              document.querySelector("#card-" + INDEX_CARDS).classList.toggle("removed");
              
              initCards()
            }
  
              var nopeListener = createButtonListener(false);
              var loveListener = createButtonListener(true);

              nope.addEventListener('click', nopeListener);
              love.addEventListener('click', loveListener);
              undo.addEventListener('click', undo_funct)

              nope.addEventListener('click', refresh)
              love.addEventListener('click', refresh)


//------AUDIO------//


    var audio = document.getElementById("myAudio");
    var playPauseBtn = document.getElementById("playPauseBtn");
    var timeline = document.getElementById("timeline");
    var progressBar = document.getElementById("progress-bar");
    var isSeeking = false;
    var fadeInDuration = 0.5; // Durée du fondu au démarrage en secondes
    var fadeOutDuration = 0.5; // Durée du fondu à la pause en secondes

  var fadeOutTimeout;


  function changeAudioSource(newSource) {
      var wasPlaying = !audio.paused;

      // Change the source of the audio
      audio.src = newSource;

      // Load the new source
      audio.load();

      // If the audio was playing, start playing the new audio after it's fully loaded
      if (wasPlaying) {
          audio.addEventListener('canplaythrough', function onCanPlayThrough() {
              audio.removeEventListener('canplaythrough', onCanPlayThrough);
              audio.play();
          });
      }
  }


  function togglePlayPause() {
      if (audio.paused) {
          fadeAudioVolume(0, 1, fadeInDuration);
          audio.play();
          playPauseBtn.innerHTML = '<i class="fa fa-pause"></i>';
      } else {
          fadeAudioVolume(1, 0, fadeOutDuration);
        playPauseBtn.innerHTML = '<i class="fa fa-play"></i>';
          // Utilisation de setTimeout pour déclencher la pause après le fondu
          fadeOutTimeout = setTimeout(function () {
              audio.pause();

          }, fadeOutDuration * 1000);
      }
  }


  function fadeAudioVolume(startVolume, endVolume, duration, callback) {
      var targetVolume = endVolume - startVolume;
      var currentTime = 0;
      var increment = 20; // Intervalles de temps pour ajuster le volume
      var interval = duration * 1000 / (targetVolume / increment);

      var fadeInterval = setInterval(function () {
          currentTime += increment;
          audio.volume = startVolume + (targetVolume * currentTime) / (duration * 1000);

          if (currentTime >= duration * 1000) {
              clearInterval(fadeInterval);

              if (callback) {
                  callback();
              }
          }
      }, increment);
  }



    function updateTime() {
        var newTime = (audio.duration / 100) * timeline.value;
        audio.currentTime = newTime;
    }

    function seek(event) {
        var rect = timeline.getBoundingClientRect();
        var offsetX = event.clientX - rect.left;
        var percentage = (offsetX / rect.width) * 100;
        audio.currentTime = (audio.duration / 100) * percentage;
    }

    function startSeek(event) {
        isSeeking = true;
        document.addEventListener("mousemove", updateSeek);
        document.addEventListener("mouseup", stopSeek);
        document.addEventListener("touchmove", updateSeek);
        document.addEventListener("touchend", stopSeek);
        updateSeek(event);
    }

    function updateSeek(event) {
        if (isSeeking) {
            var rect = timeline.getBoundingClientRect();
            var offsetX;
            if (event.type === "touchmove") {
                offsetX = event.touches[0].clientX - rect.left;
            } else {
                offsetX = event.clientX - rect.left;
            }
            var percentage = Math.min(100, Math.max(0, (offsetX / rect.width) * 100));
            progressBar.style.width = percentage + "%";
            audio.currentTime = (audio.duration / 100) * percentage;
        }
    }

    function stopSeek() {
        isSeeking = false;
        document.removeEventListener("mousemove", updateSeek);
        document.removeEventListener("mouseup", stopSeek);
        document.removeEventListener("touchmove", updateSeek);
        document.removeEventListener("touchend", stopSeek);
    }

    audio.addEventListener("timeupdate", function() {
        if (!isSeeking) {
            var percentage = (audio.currentTime / audio.duration) * 100;
            progressBar.style.width = percentage + "%";
        }
    });

    audio.addEventListener("ended", function() {
        playPauseBtn.innerHTML = '<i class="fa fa-play"></i>';
        progressBar.style.width = "0";
    });

  
</script>
          </body>

